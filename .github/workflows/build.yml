name: 'Build on CI'

on: [pull_request, push, workflow_dispatch]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    name: 'Build Documentation'
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Build Project
        run: npm run build-head

      - name: Archive "out" Directory
        uses: actions/upload-artifact@v4
        with:
          name: documentation-snapshot
          path: ./out

      - name: Clean "out" Directory
        run: npm run clean

      - name: Build PDF
        run: npm run pdf

      - name: Pull and Run PrinceXML Container
        run: |
          docker pull ghcr.io/ecma-tc54/princexml:main
          docker run --rm \
            -v "${{ github.workspace }}/out":/work \
            -e LICENSE_FILE="${{ secrets.PRINCE_LICENSE }}" \
            ghcr.io/ecma-tc54/princexml:main \
            --script /usr/local/lib/node_modules/ecmarkup/js/print.js /work/index.html -o /work/spec.pdf

      - name: Archive PDF Snapshot
        uses: actions/upload-artifact@v4
        with:
          name: pdf-snapshot
          path: ./out/spec.pdf
